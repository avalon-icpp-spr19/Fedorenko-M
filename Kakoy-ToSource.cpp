#include <iostream>
#include <limits>
#include <iomanip>
using namespace std;
int main() {
	setlocale(0, "");
	
	/* Упражнение 1
	* Дано целое трехзначное число. Найдите сумму его цифр.
	* Тестовые данные			Ожидаемый результат
	* 111						3
	* 999						27
	* 123						6
	* 321						6
	* 528						15
	*/

	//int number;
	//cout << "Введите число: ";
	//cin >> number;
	//cout << "Сумма чисел " << (Number / 100) + (Number / 10 % 10) + (Number % 10);

	/*
	* Упражнение 2
	* Даны значения двух моментов времени, принадлежащих одним и тем же суткам: часы, минуты и секунды для каждого из моментов времени.
	* Известно, что второй момент времени наступил не раньше первого.
	* Определите, сколько секунд прошло между двумя моментами времени.
	* Тестовые данные			Ожидаемый резульат
	* 1 1 1 2 2 2				3661
	* 2 20 20 3 20 20			3600
	* 23 30 00 23 59 59			1799
	*/

	//int hours, minutes, seconds, hoursEnd, minutesEnd, secondsEnd, answer;
	//cout << "Введите моменты времени: ";
	//cin >> hours >> minutes >> seconds >> hoursEnd >> minutesEnd >> secondsEnd;
	//cout << "Ответ: " << (hoursEnd - hours) * 3600 + (minutesEnd - minutes) * 60 + (secondsEnd - seconds);

	/* Упражнение 3
	Посчитать Юлианскую дату
	Пользователь вводит дату в формате день, месяц, год
	Вывести в консоль рассчитанную Юлианскую дату
	раздел "Вычисление номера юлианского дня (JDN) по дате григорианского календаря"
	Тестовые данные				Ожидаемый результат
	1 12 2018					    2458454
	1 1 2018					    2458120
	1 6 2000					    2451697
	21 12 2012					  2456283
	*/

	//int JDN, a, y, m, day, month, year;
	//cout << "Введите дату: ";
	//cin >> day >> month >> year;
	//a = (14 - month) / 12;
	//y = year + 4800 - a;
	//m = month + (12 * a) - 3;
	//JDN = day + int((153 * m + 2) / 5) + int(365 * y) + int(y / 4) - int(y / 100) + int(y / 400) - 32045;
	//cout << "Номера Юлианского дня: " << JDN;
	
	/* Упражнение 4
	* Электронные часы показывают время в формате h:mm:ss (от 0:00:00 до 23:59:59),
	* то есть сначала записывается количество часов, потом обязательно двузначное количество минут,
	* затем обязательно двузначное количество секунд.
	* Количество минут и секунд при необходимости дополняются до двузначного числа нулями.
	* Тестовые данные		Ожидаемый результат
	* 10					      0:00:10
	* 122					      0:02:02
	* 1220					    0:20:20
	* 12200					    3:23:20
	* 86000					    23:53:20
	*/

	//int number, hours, minutes, seconds;
	//cout << "Введите секунды: ";
	//cin >> number;
	//hours = number / 3600;
	//minutes = (number-hours*3600 )/ 60;
	//seconds = number % 60;
	//cout << hours << ":" << minutes / 10 << minutes % 10 << ":" << seconds / 10 << seconds % 10;

	/* Упражнение 5
	* На вход дается натуральное число N. Выведите следующее за ним четное число
	* Тестовые данные		Ожидаемый результат
	* 5						6
	* 6						8
	* 0						2
	* 111					112
	* 112					114
	*/

	//int N;
	//cout << "Введите число: ";
	//cin >> N;
	//cout << "Следущее четное число: " << (N / 2 + 1) * 2;

	/* Упражнение 6
	* Дано четырехзначное число. Определите, является ли его десятичная запись симметричной.
	* Если число симметричное, то выведите 1, иначе выведите любое другое целое число.
	* Число может иметь меньше четырех знаков, тогда нужно считать, что его десятичная запись дополняется слева незначащими нулями.
	* Тестовые данные			Ожидаемый результат
	* 2002						1
	* 2018						не 1
	* 42						  не 1
	* 220						  1
	* 9999						1
	*/

	//int number;
	//cout << "Введите число: ";
	//cin >> number;
	//cout << "Вывод: " << (number) / ((number / 1000) + (number / 100 % 10)*10 + (number / 10 % 10)*100 + (number % 10)*1000);*/

	/* Дополнительное упражнение (будет оцениваться отдельно)
	* Улитка ползет по вертикальному шесту высотой H метров, поднимаясь за день на A метров, а за ночь спускаясь на B метров.
	* На какой день улитка доползет до вершины шеста?
	* Тестовые данные		Ожидаемый результат
	*  H	A	B
	* 10	3	2			8
	* 11	4	2			5
	* 80	7	3			20
	*/

	//int H, A, B;
	//cout << "Введите высоту, подъем, спуск ";
	//cin >> H >> A >>B;
	//cout << "Количество дней: " << (H - A - 1) / (A - B) + 2;
} 